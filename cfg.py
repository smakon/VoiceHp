# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import configparser

config = configparser.ConfigParser()
cmd_list_open = list()
cmd_list_kill = list()
cmd_list_say = list()
result = ''
massive_num = int()

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(800, 600)
        MainWindow.setMinimumSize(QtCore.QSize(800, 600))
        MainWindow.setMaximumSize(QtCore.QSize(800, 600))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(0, -30, 921, 751))
        self.frame.setStyleSheet("background-color:#222222")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.frame_2 = QtWidgets.QFrame(self.frame)
        self.frame_2.setGeometry(QtCore.QRect(-1, 29, 171, 581))
        self.frame_2.setStyleSheet("background-color:#2A2A2A;")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.cfg_bot = QtWidgets.QPushButton(self.frame_2)
        self.cfg_bot.setGeometry(QtCore.QRect(10, 60, 152, 42))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.cfg_bot.setFont(font)
        self.cfg_bot.setStyleSheet("QPushButton {\n"
"    border-radius:  15px;\n"
"    background-color: #3a7ebf;\n"
"    color:#DCE4EE;\n"
"    border-color:#3E454A;\n"
"\n"
"}\n"
"\n"
"\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #325882;\n"
"}\n"
"")
        self.cfg_bot.setObjectName("cfg_bot")
        self.foo_creat = QtWidgets.QPushButton(self.frame_2)
        self.foo_creat.setGeometry(QtCore.QRect(10, 120, 152, 42))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(10)
        self.foo_creat.setFont(font)
        self.foo_creat.setStyleSheet("QPushButton {\n"
"    border-radius:  15px;\n"
"    background-color: #3a7ebf;\n"
"    color:#DCE4EE;\n"
"    border-color:#3E454A;\n"
"\n"
"}\n"
"\n"
"\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #325882;\n"
"}\n"
"")
        self.foo_creat.setObjectName("foo_creat")
        self.foo_del = QtWidgets.QPushButton(self.frame_2)
        self.foo_del.setGeometry(QtCore.QRect(10, 180, 152, 42))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        self.foo_del.setFont(font)
        self.foo_del.setStyleSheet("QPushButton {\n"
"    border-radius:  15px;\n"
"    background-color: #3a7ebf;\n"
"    color:#DCE4EE;\n"
"    border-color:#3E454A;\n"
"\n"
"}\n"
"\n"
"\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #325882;\n"
"}\n"
"")
        self.foo_del.setObjectName("foo_del")
        self.foo_red_page_btn = QtWidgets.QPushButton(self.frame_2)
        self.foo_red_page_btn.setGeometry(QtCore.QRect(10, 240, 152, 42))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(8)
        self.foo_red_page_btn.setFont(font)
        self.foo_red_page_btn.setStyleSheet("QPushButton {\n"
"    border-radius:  15px;\n"
"    background-color: #3a7ebf;\n"
"    color:#DCE4EE;\n"
"    border-color:#3E454A;\n"
"\n"
"}\n"
"\n"
"\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #325882;\n"
"}\n"
"")
        self.foo_red_page_btn.setObjectName("foo_red_page_btn")
        self.stackedWidget = QtWidgets.QStackedWidget(self.frame)
        self.stackedWidget.setGeometry(QtCore.QRect(170, 30, 631, 551))
        self.stackedWidget.setObjectName("stackedWidget")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.label = QtWidgets.QLabel(self.page)
        self.label.setGeometry(QtCore.QRect(40, 50, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label.setFont(font)
        self.label.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label.setObjectName("label")
        self.save_bot_name = QtWidgets.QPushButton(self.page)
        self.save_bot_name.setGeometry(QtCore.QRect(170, 100, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.save_bot_name.setFont(font)
        self.save_bot_name.setStyleSheet("QPushButton {\n"
"    border-radius:  10px;\n"
"    background-color: #3a7ebf;\n"
"    color:#DCE4EE;\n"
"    border-color:#3E454A;\n"
"\n"
"}\n"
"\n"
"\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #325882;\n"
"}\n"
"")
        self.save_bot_name.setObjectName("save_bot_name")
        self.name_line = QtWidgets.QLineEdit(self.page)
        self.name_line.setGeometry(QtCore.QRect(40, 100, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.name_line.setFont(font)
        self.name_line.setStyleSheet("color: rgb(255, 255, 255);")
        self.name_line.setObjectName("name_line")
        self.stackedWidget.addWidget(self.page)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.label_2 = QtWidgets.QLabel(self.page_4)
        self.label_2.setGeometry(QtCore.QRect(40, 20, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_2.setObjectName("label_2")
        self.cmd_name = QtWidgets.QLineEdit(self.page_4)
        self.cmd_name.setGeometry(QtCore.QRect(40, 120, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.cmd_name.setFont(font)
        self.cmd_name.setStyleSheet("color: rgb(255, 255, 255);")
        self.cmd_name.setObjectName("cmd_name")
        self.label_3 = QtWidgets.QLabel(self.page_4)
        self.label_3.setGeometry(QtCore.QRect(40, 70, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_3.setObjectName("label_3")
        self.prog_n = QtWidgets.QLineEdit(self.page_4)
        self.prog_n.setGeometry(QtCore.QRect(240, 120, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.prog_n.setFont(font)
        self.prog_n.setStyleSheet("color: rgb(255, 255, 255);")
        self.prog_n.setText("")
        self.prog_n.setObjectName("prog_n")
        self.label_4 = QtWidgets.QLabel(self.page_4)
        self.label_4.setGeometry(QtCore.QRect(240, 70, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_4.setObjectName("label_4")
        self.creat_cmd = QtWidgets.QPushButton(self.page_4)
        self.creat_cmd.setGeometry(QtCore.QRect(440, 120, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.creat_cmd.setFont(font)
        self.creat_cmd.setStyleSheet("QPushButton {\n"
"    border-radius:  10px;\n"
"    background-color: #3a7ebf;\n"
"    color:#DCE4EE;\n"
"    border-color:#3E454A;\n"
"\n"
"}\n"
"\n"
"\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #325882;\n"
"}\n"
"")
        self.creat_cmd.setObjectName("creat_cmd")
        self.label_5 = QtWidgets.QLabel(self.page_4)
        self.label_5.setGeometry(QtCore.QRect(40, 190, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_5.setObjectName("label_5")
        self.cmd_name_2 = QtWidgets.QLineEdit(self.page_4)
        self.cmd_name_2.setGeometry(QtCore.QRect(40, 290, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.cmd_name_2.setFont(font)
        self.cmd_name_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.cmd_name_2.setObjectName("cmd_name_2")
        self.label_6 = QtWidgets.QLabel(self.page_4)
        self.label_6.setGeometry(QtCore.QRect(240, 240, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_6.setObjectName("label_6")
        self.creat_cmd_2 = QtWidgets.QPushButton(self.page_4)
        self.creat_cmd_2.setGeometry(QtCore.QRect(440, 290, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.creat_cmd_2.setFont(font)
        self.creat_cmd_2.setStyleSheet("QPushButton {\n"
"    border-radius:  10px;\n"
"    background-color: #3a7ebf;\n"
"    color:#DCE4EE;\n"
"    border-color:#3E454A;\n"
"\n"
"}\n"
"\n"
"\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #325882;\n"
"}\n"
"")
        self.creat_cmd_2.setObjectName("creat_cmd_2")
        self.label_7 = QtWidgets.QLabel(self.page_4)
        self.label_7.setGeometry(QtCore.QRect(40, 240, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_7.setObjectName("label_7")
        self.prog_n_2 = QtWidgets.QLineEdit(self.page_4)
        self.prog_n_2.setGeometry(QtCore.QRect(240, 290, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.prog_n_2.setFont(font)
        self.prog_n_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.prog_n_2.setText("")
        self.prog_n_2.setObjectName("prog_n_2")
        self.prog_n_3 = QtWidgets.QLineEdit(self.page_4)
        self.prog_n_3.setGeometry(QtCore.QRect(240, 460, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.prog_n_3.setFont(font)
        self.prog_n_3.setStyleSheet("color: rgb(255, 255, 255);")
        self.prog_n_3.setText("")
        self.prog_n_3.setObjectName("prog_n_3")
        self.creat_cmd_3 = QtWidgets.QPushButton(self.page_4)
        self.creat_cmd_3.setGeometry(QtCore.QRect(440, 460, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.creat_cmd_3.setFont(font)
        self.creat_cmd_3.setStyleSheet("QPushButton {\n"
"    border-radius:  10px;\n"
"    background-color: #3a7ebf;\n"
"    color:#DCE4EE;\n"
"    border-color:#3E454A;\n"
"\n"
"}\n"
"\n"
"\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #325882;\n"
"}\n"
"")
        self.creat_cmd_3.setObjectName("creat_cmd_3")
        self.label_12 = QtWidgets.QLabel(self.page_4)
        self.label_12.setGeometry(QtCore.QRect(40, 410, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_12.setFont(font)
        self.label_12.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_12.setObjectName("label_12")
        self.cmd_name_3 = QtWidgets.QLineEdit(self.page_4)
        self.cmd_name_3.setGeometry(QtCore.QRect(40, 460, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.cmd_name_3.setFont(font)
        self.cmd_name_3.setStyleSheet("color: rgb(255, 255, 255);")
        self.cmd_name_3.setObjectName("cmd_name_3")
        self.label_13 = QtWidgets.QLabel(self.page_4)
        self.label_13.setGeometry(QtCore.QRect(240, 410, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_13.setFont(font)
        self.label_13.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.page_4)
        self.label_14.setGeometry(QtCore.QRect(40, 360, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_14.setFont(font)
        self.label_14.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_14.setObjectName("label_14")
        self.stackedWidget.addWidget(self.page_4)
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setObjectName("page_5")
        self.stackedWidget.addWidget(self.page_5)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.massiv = QtWidgets.QListWidget(self.page_3)
        self.massiv.setGeometry(QtCore.QRect(20, 90, 181, 301))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.massiv.setFont(font)
        self.massiv.setStyleSheet("color: rgb(255, 255, 255);\n"
"text-align:center;")
        self.massiv.setObjectName("massiv")
        self.del_foo_btn = QtWidgets.QPushButton(self.page_3)
        self.del_foo_btn.setGeometry(QtCore.QRect(60, 420, 91, 42))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.del_foo_btn.setFont(font)
        self.del_foo_btn.setStyleSheet("QPushButton {\n"
"    border-radius:  15px;\n"
"    background-color: #3a7ebf;\n"
"    color:#DCE4EE;\n"
"    border-color:#3E454A;\n"
"\n"
"}\n"
"\n"
"\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #325882;\n"
"}\n"
"")
        self.del_foo_btn.setObjectName("del_foo_btn")
        self.massiv_2 = QtWidgets.QListWidget(self.page_3)
        self.massiv_2.setGeometry(QtCore.QRect(220, 90, 181, 301))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.massiv_2.setFont(font)
        self.massiv_2.setStyleSheet("color: rgb(255, 255, 255);\n"
"text-align:center;")
        self.massiv_2.setObjectName("massiv_2")
        self.massiv_3 = QtWidgets.QListWidget(self.page_3)
        self.massiv_3.setGeometry(QtCore.QRect(420, 90, 181, 301))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.massiv_3.setFont(font)
        self.massiv_3.setStyleSheet("color: rgb(255, 255, 255);\n"
"text-align:center;")
        self.massiv_3.setObjectName("massiv_3")
        self.label_8 = QtWidgets.QLabel(self.page_3)
        self.label_8.setGeometry(QtCore.QRect(20, 40, 191, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.page_3)
        self.label_9.setGeometry(QtCore.QRect(210, 40, 211, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_9.setObjectName("label_9")
        self.label_25 = QtWidgets.QLabel(self.page_3)
        self.label_25.setGeometry(QtCore.QRect(420, 40, 191, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_25.setFont(font)
        self.label_25.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_25.setObjectName("label_25")
        self.del_foo_btn_2 = QtWidgets.QPushButton(self.page_3)
        self.del_foo_btn_2.setGeometry(QtCore.QRect(260, 420, 91, 42))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.del_foo_btn_2.setFont(font)
        self.del_foo_btn_2.setStyleSheet("QPushButton {\n"
"    border-radius:  15px;\n"
"    background-color: #3a7ebf;\n"
"    color:#DCE4EE;\n"
"    border-color:#3E454A;\n"
"\n"
"}\n"
"\n"
"\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #325882;\n"
"}\n"
"")
        self.del_foo_btn_2.setObjectName("del_foo_btn_2")
        self.del_foo_btn_3 = QtWidgets.QPushButton(self.page_3)
        self.del_foo_btn_3.setGeometry(QtCore.QRect(460, 420, 91, 42))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.del_foo_btn_3.setFont(font)
        self.del_foo_btn_3.setStyleSheet("QPushButton {\n"
"    border-radius:  15px;\n"
"    background-color: #3a7ebf;\n"
"    color:#DCE4EE;\n"
"    border-color:#3E454A;\n"
"\n"
"}\n"
"\n"
"\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #325882;\n"
"}\n"
"")
        self.del_foo_btn_3.setObjectName("del_foo_btn_3")
        self.stackedWidget.addWidget(self.page_3)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.label_10 = QtWidgets.QLabel(self.page_2)
        self.label_10.setGeometry(QtCore.QRect(20, 20, 191, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_10.setFont(font)
        self.label_10.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_10.setObjectName("label_10")
        self.massiv_4 = QtWidgets.QListWidget(self.page_2)
        self.massiv_4.setGeometry(QtCore.QRect(20, 260, 181, 91))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.massiv_4.setFont(font)
        self.massiv_4.setStyleSheet("color: rgb(255, 255, 255);\n"
"text-align:center;")
        self.massiv_4.setObjectName("massiv_4")
        self.label_26 = QtWidgets.QLabel(self.page_2)
        self.label_26.setGeometry(QtCore.QRect(20, 380, 191, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_26.setFont(font)
        self.label_26.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_26.setObjectName("label_26")
        self.massiv_5 = QtWidgets.QListWidget(self.page_2)
        self.massiv_5.setGeometry(QtCore.QRect(20, 80, 181, 91))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.massiv_5.setFont(font)
        self.massiv_5.setStyleSheet("color: rgb(255, 255, 255);\n"
"text-align:center;")
        self.massiv_5.setObjectName("massiv_5")
        self.label_11 = QtWidgets.QLabel(self.page_2)
        self.label_11.setGeometry(QtCore.QRect(20, 200, 211, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_11.setFont(font)
        self.label_11.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_11.setObjectName("label_11")
        self.massiv_6 = QtWidgets.QListWidget(self.page_2)
        self.massiv_6.setGeometry(QtCore.QRect(20, 440, 181, 91))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.massiv_6.setFont(font)
        self.massiv_6.setStyleSheet("color: rgb(255, 255, 255);\n"
"text-align:center;")
        self.massiv_6.setObjectName("massiv_6")
        self.red_foo_btn_3 = QtWidgets.QPushButton(self.page_2)
        self.red_foo_btn_3.setGeometry(QtCore.QRect(340, 390, 141, 42))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.red_foo_btn_3.setFont(font)
        self.red_foo_btn_3.setStyleSheet("QPushButton {\n"
"    border-radius:  15px;\n"
"    background-color: #3a7ebf;\n"
"    color:#DCE4EE;\n"
"    border-color:#3E454A;\n"
"\n"
"}\n"
"\n"
"\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #325882;\n"
"}\n"
"")
        self.red_foo_btn_3.setObjectName("red_foo_btn_3")
        self.cmd_name_red = QtWidgets.QLineEdit(self.page_2)
        self.cmd_name_red.setGeometry(QtCore.QRect(350, 200, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.cmd_name_red.setFont(font)
        self.cmd_name_red.setStyleSheet("color: rgb(255, 255, 255);")
        self.cmd_name_red.setObjectName("cmd_name_red")
        self.prog_n_red = QtWidgets.QLineEdit(self.page_2)
        self.prog_n_red.setGeometry(QtCore.QRect(350, 310, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.prog_n_red.setFont(font)
        self.prog_n_red.setStyleSheet("color: rgb(255, 255, 255);")
        self.prog_n_red.setText("")
        self.prog_n_red.setObjectName("prog_n_red")
        self.label_15 = QtWidgets.QLabel(self.page_2)
        self.label_15.setGeometry(QtCore.QRect(350, 150, 221, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_15.setFont(font)
        self.label_15.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.page_2)
        self.label_16.setGeometry(QtCore.QRect(350, 260, 241, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_16.setFont(font)
        self.label_16.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_16.setObjectName("label_16")
        self.label_17 = QtWidgets.QLabel(self.page_2)
        self.label_17.setGeometry(QtCore.QRect(350, 30, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.label_17.setFont(font)
        self.label_17.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.label_17.setObjectName("label_17")
        self.cmd_name_lab = QtWidgets.QLabel(self.page_2)
        self.cmd_name_lab.setGeometry(QtCore.QRect(350, 90, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(13)
        self.cmd_name_lab.setFont(font)
        self.cmd_name_lab.setStyleSheet("background-color: #3D3D3D;\n"
"color:#DCE4EE;\n"
"")
        self.cmd_name_lab.setText("")
        self.cmd_name_lab.setObjectName("cmd_name_lab")
        self.stackedWidget.addWidget(self.page_2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_5 = QtWidgets.QAction(MainWindow)
        self.action_5.setObjectName("action_5")

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(3)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.add_functions()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.cfg_bot.setText(_translate("MainWindow", "Настройки Бота"))
        self.foo_creat.setText(_translate("MainWindow", "Добавление Функций"))
        self.foo_del.setText(_translate("MainWindow", "Удаление Функций"))
        self.foo_red_page_btn.setText(_translate("MainWindow", "Редактирование Функций"))
        self.label.setText(_translate("MainWindow", " BOT Name"))
        self.save_bot_name.setText(_translate("MainWindow", "Сохранить"))
        self.label_2.setText(_translate("MainWindow", " Открыть приложение"))
        self.label_3.setText(_translate("MainWindow", " Название команды"))
        self.label_4.setText(_translate("MainWindow", " Название программы"))
        self.creat_cmd.setText(_translate("MainWindow", "Создать"))
        self.label_5.setText(_translate("MainWindow", "Закрыть приложение"))
        self.label_6.setText(_translate("MainWindow", " Название программы"))
        self.creat_cmd_2.setText(_translate("MainWindow", "Создать"))
        self.label_7.setText(_translate("MainWindow", " Название команды"))
        self.creat_cmd_3.setText(_translate("MainWindow", "Создать"))
        self.label_12.setText(_translate("MainWindow", " Команда"))
        self.label_13.setText(_translate("MainWindow", " Ответ праграммы"))
        self.label_14.setText(_translate("MainWindow", "Ответное сообщение"))
        self.del_foo_btn.setText(_translate("MainWindow", "Удалить"))
        self.label_8.setText(_translate("MainWindow", " Функции для открытия"))
        self.label_9.setText(_translate("MainWindow", " Функции для закрывания"))
        self.label_25.setText(_translate("MainWindow", " Функции для ответа"))
        self.del_foo_btn_2.setText(_translate("MainWindow", "Удалить"))
        self.del_foo_btn_3.setText(_translate("MainWindow", "Удалить"))
        self.label_10.setText(_translate("MainWindow", " Функции для открытия"))
        self.label_26.setText(_translate("MainWindow", " Функции для ответа"))
        self.label_11.setText(_translate("MainWindow", " Функции для закрывания"))
        self.red_foo_btn_3.setText(_translate("MainWindow", " Редактировать"))
        self.label_15.setText(_translate("MainWindow", " Новое название команды"))
        self.label_16.setText(_translate("MainWindow", " Новое название программы"))
        self.label_17.setText(_translate("MainWindow", " Название команды"))
        self.action_5.setText(_translate("MainWindow", "НАстройки Бота"))

    def add_functions(self):
            self.stackedWidget.setCurrentIndex(0)
            self.cfg_bot.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(0))
            self.foo_creat.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(1))
            self.foo_del.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(3))
            self.foo_red_page_btn.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(4))
            self.save_bot_name.clicked.connect(lambda: self.save_bot_name_change())
            self.creat_cmd.clicked.connect(
                    lambda: (self.craete_command(True), self.add_el_red(), self.add_el_del()))
            self.creat_cmd_2.clicked.connect(
                    lambda: (self.craete_command(False), self.add_el_red(), self.add_el_del()))
            self.creat_cmd_3.clicked.connect(
                    lambda: (self.craete_command(None), self.add_el_red(), self.add_el_del()))
            self.del_foo_btn.clicked.connect(lambda: (self.delete_foo(1), self.add_el_red(), self.add_el_del()))
            self.del_foo_btn_2.clicked.connect(
                    lambda: (self.delete_foo(2), self.add_el_red(), self.add_el_del()))
            self.del_foo_btn_3.clicked.connect(
                    lambda: (self.delete_foo(3), self.add_el_red(), self.add_el_del()))
            self.red_foo_btn_3.clicked.connect(lambda: (self.get_item(), self.add_el_red(), self.add_el_del()))
            self.massiv_5.itemClicked.connect(self.listwidgetclicked_)
            self.massiv_4.itemClicked.connect(self.listwidgetclicked_1)
            self.massiv_6.itemClicked.connect(self.listwidgetclicked_2)

    def save_bot_name_change(self):
            config.read('example.ini', encoding='utf-8')
            config['DEFAULT'] = {'bot_n': f'{self.name_line.text()}'}
            with open('example.ini', 'w', encoding='utf8') as configfile:
                    config.write(configfile)

    def craete_command(self, bool):
            cmd_count = 0
            config.read("example.ini", encoding="utf-8")
            cmd_count += 1
            self.b = bool
            if self.b == True:
                    cmd_count += int(config['DEFAULT']['cmd_count_save_open'])
                    config['COMMANDS_OPEN_' + str(cmd_count - 1)] = {'cmd_name': f'{self.cmd_name.text()}',
                                                                     'prog_name': f'{self.prog_n.text()}'}
                    with open("example.ini", 'a+', encoding='utf8') as file:
                            config.write(file)

                    config['DEFAULT']['cmd_count_save_open'] = str(cmd_count)
                    with open("example.ini", 'w', encoding='utf8') as file:
                            config.write(file)
            elif self.b == False:
                    cmd_count += int(config['DEFAULT']['cmd_count_save_kill'])
                    config['COMMANDS_KILL_' + str(cmd_count - 1)] = {'cmd_name': f'{self.cmd_name_2.text()}',
                                                                     'prog_name': f'{self.prog_n_2.text()}'}
                    with open("example.ini", 'a+', encoding='utf8') as file:
                            config.write(file)

                    config['DEFAULT']['cmd_count_save_kill'] = str(cmd_count)
                    with open("example.ini", 'w', encoding='utf8') as file:
                            config.write(file)
            elif self.b == None:
                    cmd_count += int(config['DEFAULT']['cmd_count_save_say'])
                    config['COMMANDS_SAY_' + str(cmd_count - 1)] = {'cmd_name': f'{self.cmd_name_3.text()}',
                                                                    'prog_name': f'{self.prog_n_3.text()}'}
                    with open("example.ini", 'a+', encoding='utf8') as file:
                            config.write(file)

                    config['DEFAULT']['cmd_count_save_say'] = str(cmd_count)
                    with open("example.ini", 'w', encoding='utf8') as file:
                            config.write(file)

    def add_el_del(self):
            global cmd_list_open, cmd_list_say, cmd_list_kill

            cmd_list_open = []
            cmd_list_kill = []
            cmd_list_say = []
            self.massiv.clear()
            self.massiv_2.clear()
            self.massiv_3.clear()

            config.read('example.ini', encoding='utf-8')
            for i in range(int(config['DEFAULT']['cmd_count_save_open'])):
                    if config[f'COMMANDS_OPEN_{i}']['cmd_name'] != "None":
                            cmd_list_open.append(config[f'COMMANDS_OPEN_{i}']['cmd_name'])
            for i in range(len(cmd_list_open)):
                    self.massiv.addItem(cmd_list_open[i])
            for i in range(int(config['DEFAULT']['cmd_count_save_kill'])):
                    if config[f'COMMANDS_KILL_{i}']['cmd_name'] != "None":
                            cmd_list_kill.append(config[f'COMMANDS_KILL_{i}']['cmd_name'])

            for i in range(len(cmd_list_kill)):
                    self.massiv_2.addItem(cmd_list_kill[i])

            for i in range(int(config['DEFAULT']['cmd_count_save_say'])):
                    if config[f'COMMANDS_SAY_{i}']['cmd_name'] != "None":
                            cmd_list_say.append(config[f'COMMANDS_SAY_{i}']['cmd_name'])

            for i in range(len(cmd_list_say)):
                    self.massiv_3.addItem(cmd_list_say[i])

            return cmd_list_open, cmd_list_kill, cmd_list_say

    def delete_foo(self, num):
            global cmd_list_open, cmd_list_say, cmd_list_kill
            if num == 1:
                    current = self.massiv.currentRow()
                    if cmd_list_open[current] in cmd_list_open:
                            for i in range(int(config['DEFAULT']['cmd_count_save_open'])):
                                    if config[f'COMMANDS_OPEN_{i}']['cmd_name'] == cmd_list_open[current]:
                                            config[f'COMMANDS_OPEN_{i}']['cmd_name'] = "None"
                                            config[f'COMMANDS_OPEN_{i}']['prog_name'] = "None"
                                            with open("example.ini", 'w', encoding='utf8') as file:
                                                    config.write(file)

                    self.massiv.takeItem(current)
            elif num == 2:
                    current = self.massiv_2.currentRow()
                    if cmd_list_kill[current] in cmd_list_kill:
                            for i in range(int(config['DEFAULT']['cmd_count_save_kill'])):
                                    if config[f'COMMANDS_KILL_{i}']['cmd_name'] == cmd_list_kill[current]:
                                            config[f'COMMANDS_KILL_{i}']['cmd_name'] = "None"
                                            config[f'COMMANDS_KILL_{i}']['prog_name'] = "None"
                                            with open("example.ini", 'w', encoding='utf8') as file:
                                                    config.write(file)

                    self.massiv_2.takeItem(current)
            elif num == 3:
                    current = self.massiv_3.currentRow()
                    if cmd_list_say[current] in cmd_list_say:
                            for i in range(int(config['DEFAULT']['cmd_count_save_say'])):
                                    if config[f'COMMANDS_SAY_{i}']['cmd_name'] == cmd_list_say[current]:
                                            config[f'COMMANDS_SAY_{i}']['cmd_name'] = "None"
                                            config[f'COMMANDS_SAY_{i}']['prog_name'] = "None"
                                            with open("example.ini", 'w', encoding='utf8') as file:
                                                    config.write(file)
                    self.massiv_3.takeItem(current)

    def add_el_red(self):
            global cmd_list_open, cmd_list_say, cmd_list_kill

            cmd_list_open = []
            cmd_list_kill = []
            cmd_list_say = []
            self.massiv_4.clear()
            self.massiv_5.clear()
            self.massiv_6.clear()

            config.read('example.ini', encoding='utf-8')
            for i in range(int(config['DEFAULT']['cmd_count_save_open'])):
                    cmd_list_open.append(config[f'COMMANDS_OPEN_{i}']['cmd_name'])

            for i in range(len(cmd_list_open)):
                    self.massiv_5.addItem(cmd_list_open[i])

            for i in range(int(config['DEFAULT']['cmd_count_save_kill'])):
                    cmd_list_kill.append(config[f'COMMANDS_KILL_{i}']['cmd_name'])

            for i in range(len(cmd_list_kill)):
                    self.massiv_4.addItem(cmd_list_kill[i])

            for i in range(int(config['DEFAULT']['cmd_count_save_say'])):
                    cmd_list_say.append(config[f'COMMANDS_SAY_{i}']['cmd_name'])

            for i in range(len(cmd_list_say)):
                    self.massiv_6.addItem(cmd_list_say[i])

            return cmd_list_open, cmd_list_kill, cmd_list_say

    def listwidgetclicked_(self, item):
            global massive_num
            self.cmd_name_lab.setText(f'{item.text()}')
            massive_num = 5
            return massive_num

    def listwidgetclicked_1(self, item):
            global massive_num
            self.cmd_name_lab.setText(f'{item.text()}')
            massive_num = 4
            return massive_num

    def listwidgetclicked_2(self, item):
            global massive_num
            self.cmd_name_lab.setText(f'{item.text()}')
            massive_num = 6
            return massive_num

    def get_item(self):
            global massive_num
            config.read("example.ini", encoding="utf-8")
            if massive_num == 6:
                    for i in range(int(config["DEFAULT"]["cmd_count_save_say"])):
                            if self.cmd_name_lab.text() == config[f'COMMANDS_SAY_{i}']['cmd_name']:
                                    config[f'COMMANDS_SAY_{i}'] = {'cmd_name': f'{self.cmd_name_red.text()}',
                                                                   'prog_name': f'{self.prog_n_red.text()}'}

                                    with open("example.ini", 'w', encoding='utf8') as file:
                                            config.write(file)
            elif massive_num == 5:
                    for i in range(int(config["DEFAULT"]["cmd_count_save_open"])):
                            if self.cmd_name_lab.text() == config[f'COMMANDS_OPEN_{i}']['cmd_name']:
                                    config[f'COMMANDS_OPEN_{i}'] = {'cmd_name': f'{self.cmd_name_red.text()}',
                                                                    'prog_name': f'{self.prog_n_red.text()}'}

                                    with open("example.ini", 'w', encoding='utf8') as file:
                                            config.write(file)
            elif massive_num == 4:
                    for i in range(int(config["DEFAULT"]["cmd_count_save_kill"])):
                            if self.cmd_name_lab.text() == config[f'COMMANDS_KILL_{i}']['cmd_name']:
                                    config[f'COMMANDS_KILL_{i}'] = {'cmd_name': f'{self.cmd_name_red.text()}',
                                                                    'prog_name': f'{self.prog_n_red.text()}'}

                                    with open("example.ini", 'w', encoding='utf8') as file:
                                            config.write(file)


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
